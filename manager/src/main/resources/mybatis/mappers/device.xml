<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weasel.penetrate.manager.domain.device.Device">

    <resultMap id="deviceResult" type="Device">
        <id property="id" column="d_id"/>
        <result property="number" column="d_number"/>
        <result property="username" column="d_username"/>
        <result property="protocolType" column="d_protocol_type"/>
        <result property="authToken" column="d_auth_token"/>
        <result property="bindAddr" column="d_bind_addr"/>
        <result property="listenPort" column="d_listen_port"/>
        <result property="customDomains" column="d_custom_domains"/>
        <result property="locations" column="d_locations"/>
    </resultMap>

    <sql id="commonSelect">
        SELECT d.id as d_id,
                d.number as d_number,
                d.username as d_username,
                d.protocol_type as d_protocol_type,
                d.auth_token as d_auth_token,
                d.bind_addr as d_bind_addr,
                d.listen_port as d_listen_port,
                d.custom_domains as d_custom_domains,
                d.locations as d_locations
        FROM device d
    </sql>

    <select id="query" resultMap="deviceResult" parameterType="Device">
        <include refid="commonSelect"/>
        <where>
            <if test="username != null and username != ''">
                d.username = #{username}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="device" >
        INSERT INTO device(number,username,protocol_type,auth_token,bind_addr,listen_port,custom_domains,locations)
        VALUE (#{number},#{username},#{protocolType},#{authToken},#{bindAddr},#{listenPort},#{customDomains},#{locations})
        <selectKey resultType="long" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
    </insert>

    <update id="update" parameterType="device">
        UPDATE device
        <set>
            <if test="protocolType != null">
                protocol_type = #{protocolType},
            </if>
            <if test="authToken != null and authToken != ''">
                auth_token = #{authToken},
            </if>
            <if test="customDomains != null and customDomains != ''">
                custom_domains = #{customDomains},
            </if>
            <if test="locations != null and locations != ''">
                locations = #{locations}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    
    <select id="countByPort" resultType="int">
        SELECT COUNT(1) FROM device where listen_port = #{listenPort}
    </select>

    <select id="countBySubDomain" resultType="int">
        SELECT COUNT(1) FROM device where custom_domains = #{customDomains}
    </select>

    <delete id="deleteById">
        DELETE FROM device
        <where>
            id=#{id}
            <if test="username != null and username != ''">
                and username=#{username}
            </if>
        </where>
    </delete>

    <select id="getMaxDistributedPort" resultType="int">
        SELECT listen_port FROM device
        ORDER BY listen_port DESC
        limit 0,1
    </select>

    <delete id="deleteByUsername" >
        DELETE FROM device
        WHERE username=#{username}
    </delete>
</mapper>